classdef bTriax
    properties
        b1 = [1 0 0]';
        b2 = [0 1 0]';
        b3 = [0 0 1]';
        b1r = [1 0 0]';
        b2r = [0 1 0]';
        b3r = [0 0 1]';
        b1_color = [1 0 0];
        b2_color = [0 1 0];
        b3_color = [0 0 1];
        origin = [0 0 0];
        bName = '\_def';
        pScale = 1;
        pWidth = 1;
        hLine = [];
        isrotated = 0;
        
        % graphics properties
        hL_1;
        hL_2;
        hL_3;
        hT;
        hT1;
        hT2;
        hT3;
        
    end
    methods
        function obj = bTriax()
   
        end
        function obj = Rotate(obj,M3x3)
            % input is inertial to body, thus
            % we want body in inertial space (')
            obj.b1r = M3x3' * obj.b1;
            obj.b2r = M3x3' * obj.b2;
            obj.b3r = M3x3' * obj.b3;
            obj.isrotated = 1;
        end
        function plot_update(this,scale)
            set(this.hL_1, ...
                'XData',[this.origin(1) this.origin(1) + scale*this.b1(1)], ...
                'YData',[this.origin(2) this.origin(2) + scale*this.b1(2)], ...
                'ZData',[this.origin(3) this.origin(3) + scale*this.b1(3)] );
            set(this.hL_2, ...
                'XData',[this.origin(1) this.origin(1) + scale*this.b2(1)], ...
                'YData',[this.origin(2) this.origin(2) + scale*this.b2(2)], ...
                'ZData',[this.origin(3) this.origin(3) + scale*this.b2(3)] );
            set(this.hL_3, ...
                'XData',[this.origin(1) this.origin(1) + scale*this.b3(1)], ...
                'YData',[this.origin(2) this.origin(2) + scale*this.b3(2)], ...
                'ZData',[this.origin(3) this.origin(3) + scale*this.b3(3)] );
            set(this.hT,'Position',[this.origin(1),this.origin(2),this.origin(3)]);
            set(this.hT1,'Position', [ this.origin(1) + scale*this.b1(1), ...
                    this.origin(2) + scale*this.b1(2), ...
                    this.origin(3) + scale*this.b1(3)] );
            set(this.hT2,'Position', [ this.origin(1) + scale*this.b2(1), ...
                    this.origin(2) + scale*this.b2(2), ...
                    this.origin(3) + scale*this.b2(3)] );
            set(this.hT3,'Position', [ this.origin(1) + scale*this.b3(1), ...
                    this.origin(2) + scale*this.b3(2), ...
                    this.origin(3) + scale*this.b3(3)] );
        end
        function this = plot(this,scale)
            if(~exist('scale','var'))
                scale = 1;
            end
            
            this.hL_1 = line( ...
                [this.origin(1) this.origin(1) + scale*this.b1(1)], ...
                [this.origin(2) this.origin(2) + scale*this.b1(2)], ...
                [this.origin(3) this.origin(3) + scale*this.b1(3)]);
            this.hL_2 = line( ...
                [this.origin(1) this.origin(1) + scale*this.b2(1)], ...
                [this.origin(2) this.origin(2) + scale*this.b2(2)], ...
                [this.origin(3) this.origin(3) + scale*this.b2(3)]);
            this.hL_3 = line( ...
                [this.origin(1) this.origin(1) + scale*this.b3(1)], ...
                [this.origin(2) this.origin(2) + scale*this.b3(2)], ...
                [this.origin(3) this.origin(3) + scale*this.b3(3)]);
            
            set(this.hL_1,'Color',this.b1_color,'LineWidth',this.pWidth);
            set(this.hL_2,'Color',this.b2_color,'LineWidth',this.pWidth);
            set(this.hL_3,'Color',this.b3_color,'LineWidth',this.pWidth);
            this.hT = text(this.origin(1),this.origin(2),this.origin(3),this.bName, ...
                'FontSize',8);
            this.hT1 = text( ...
                this.origin(1) + scale*this.b1(1), ...
                this.origin(2) + scale*this.b1(2), ...
                this.origin(3) + scale*this.b1(3), ...
                '1','FontSize',6);
            this.hT2 = text( ...
                this.origin(1) + scale*this.b2(1), ...
                this.origin(2) + scale*this.b2(2), ...
                this.origin(3) + scale*this.b2(3), ...
                '2','FontSize',6);
            this.hT3 = text( ...
                this.origin(1) + scale*this.b3(1), ...
                this.origin(2) + scale*this.b3(2), ...
                this.origin(3) + scale*this.b3(3), ...
                '3','FontSize',6);
           if(this.isrotated == 1) 
            hL_1r = line( ...
                [this.origin(1) this.origin(1) + scale*this.b1r(1)], ...
                [this.origin(2) this.origin(2) + scale*this.b1r(2)], ...
                [this.origin(3) this.origin(3) + scale*this.b1r(3)]);
            hL_2r = line( ...
                [this.origin(1) this.origin(1) + scale*this.b2r(1)], ...
                [this.origin(2) this.origin(2) + scale*this.b2r(2)], ...
                [this.origin(3) this.origin(3) + scale*this.b2r(3)]);
            hL_3r = line( ...
                [this.origin(1) this.origin(1) + scale*this.b3r(1)], ...
                [this.origin(2) this.origin(2) + scale*this.b3r(2)], ...
                [this.origin(3) this.origin(3) + scale*this.b3r(3)]);
            
            set(hL_1r,'Color',this.b1_color,'LineWidth',this.pWidth,'LineStyle',':');
            set(hL_2r,'Color',this.b2_color,'LineWidth',this.pWidth,'LineStyle',':');
            set(hL_3r,'Color',this.b3_color,'LineWidth',this.pWidth,'LineStyle',':');
        end
        end
    end
end